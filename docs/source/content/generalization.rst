.. raw:: html

    <script type="text/javascript">
        var observer = new MutationObserver(function(mutations) {
            var dark = document.body.dataset.theme == 'dark';

            if (document.body.dataset.theme == 'auto') {
                dark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
            }
            
            console.log(dark);
            document.getElementsByClassName('header-image')[0].src = dark ? '../_images/jhu-logo-white.png' : "../_images/jhu-logo-dark.png";
            document.getElementsByClassName('sidebar_ccb')[0].src = dark ? '../_images/JHU_ccb-white.png' : "../_images/JHU_ccb-dark.png";
            document.getElementsByClassName('sidebar_wse')[0].src = dark ? '../_images/JHU_wse-white.png' : "../_images/JHU_wse-dark.png";

            console.log("document.getElementsByClassName('sidebar_wse')[0].src: ", document.getElementsByClassName('sidebar_wse')[0].src);
        })
        observer.observe(document.body, {attributes: true, attributeFilter: ['data-theme']});
        console.log(document.body);
    </script>
    <link rel="preload" href="../_images/jhu-logo-dark.png" as="image">



.. raw:: html
    
    <script type="text/javascript">
        var block_to_insert ;
        var container_block ;
        
        block_to_insert = document.createElement( 'div' );
        block_to_insert.innerHTML = '<img alt="My Logo" style="width:80%;  margin:10px; padding-top:30px" class="logo sidebar_ccb align-center" src="../_images/JHU_ccb-dark.png"><img alt="My Logo" class="logo sidebar_wse align-center" style="width:80%;  margin:10px" src="../_images/JHU_wse-dark.png">' ;
        
        container_block = document.getElementsByClassName( 'sidebar-sticky' )[0];
        console.log("container_block: ", container_block);
        container_block.appendChild( block_to_insert );
    </script>


|

.. _generalization-section:

Splam generalizes on no-human species
=========================================================================


You have RNA-Seq reads and are running an RNA-Seq analysis pipeline. You have performed quality control, aligned the reads to the genome, and assembled the alignments into transcripts. Now, you have obtained a :code:`GFF` or :code:`GTF` file generated by a transcriptome assembler. The next question you want to address is the quality of these assembled transcripts.


A common approach in the pipeline involves using the :code:`gffcompare` to compare the assembled transcripts with a reference annotation file, such as `RefSeq <https://ftp.ncbi.nlm.nih.gov/refseq/>`_, `Gencode <https://www.gencodegenes.org>`_, or `CHESS <http://ccb.jhu.edu/chess/>`_. However, this method assumes the correctness of the annotation file and aims to evaluate how closely our assembled transcripts align with the annotations. 


It is important to acknowledge that annotation files can contain misannotations and noise. Even the most meticulously curated human annotations are not exempt from errors. Moreover, there are even more errors in the annotation files of other species.

.. important::

    **We provide a new approach to evaluate transcripts. You can run splam!**


You can run splam on **(1) annotation files** or **(2) assembled transcripts**. splam outputs the scores of every donor and acceptor sites, by using these scores, 

1. You can get an overview of what is the quality of all the introns (splice junctions) inside your annotation file.


2. You **(I)** have an overview of what's the quality of the assembled transcripts. Furthermore, you can **(II)** assess each transcript by checking how many bad splice junctions a transcripts have, which can be a good filtering criteria for assembled transcripts.

3. There are more potential usage to be explored!


|

.. _annotation-prepareintput:

Step 1: Preparing your input files
+++++++++++++++++++++++++++++++++++


|
|
|
|
|

.. image:: ../image/jhu-logo-dark.png
   :alt: My Logo
   :class: logo, header-image
   :align: center
